/*
BASIC TYPES
 
 STRING=============================================================
    let myName: String = "Andrey"
        or
    let myName = String("Andrey")
        or
    var myCityName = ""
        or
    var myCityName = String()
        or
    var longStr = """
         Это многострочный
         строковый литерал
         """
        or
    var str = "\u{4a}\u{4c}"    // JL   \u{кодоваяТочкаСимволаВШестнадцатиричнойСистеме}
                                        То есть шестнадцатиричный ascii код символа.
 
 
 var phrase = "My name is "
 phrase += "Andrey"             // "My name is Andrey"
 phrase += " \(1 + 4)"          // "My name is Andrey 5"
 
 Строки можно сравнивать, при этом идёт поочередное сравнение ASCII кода символов
    до первого разного символа.
 
 
 INT================================================================
    let myBirthYear: Int = 1988
        or
    var myAge = 35
 
 
 FLOAT==============================================================
    Содержит до 6 чисел в дробной части.
    Если не задать тип явно то по умолчанию будет Double.
    let pi: Float = 3.14
 
 
 DOUBLE=============================================================
 Содержит до 15 чисел в дробной части.
    let pi: Double = 3.14
        or
    var num = 432.5432
 
 
 BOOL===============================================================
    let isExist: Bool = true
        or
    var isOn = false
 
    Логические операции:
        NO      !
        AND     &&
        OR      ||
    Операторы сравнения:
    > < >= <= == !=
 
 DECIMAL============================================================
 Содержит до 38 чисел в дробной части.
 Требует подключения библиотеки Foundation
    Let bigNum: Decimal = 12.89458345839479458399348
 
 
 CHARACTER==========================================================
    Константе или переменной типа Character нельзя присвоить пустой литерал "", так как это не символ.
    let char = "r"
        or
    var char: Character = "S"
 
    
 
 
 
 При создании константы let num: int и не инициализации ей значения,
    это можно сделать потом, но один раз так как это константа.
 
 
 TYPEALIAS [тайпэ:лиас] Псевдоним типа =============================
    
    typealias Celsius = Int                 Объявили псевдоним типа Int, как Celsius.
        or
    typealias Celsius = Int & Double        Объявление псевдонима нескольких типов.
    var temp: Celsius = 32
 
 */
