/*
ERRORS HANDLING (Обработка ошибок или Проброс ошибок)
 
 Обработка ошибок - это процесс реагирования на ошибки, которые возникают при работе каких либо функций и их обработки.
 
 //Создание ошибок
 //Все перечисления с ошибками должны быть подписаны на протокол Error
 enum AuthError: Error {
     case wrongPassword
     case dataNotExist
     case serverLost
 }

 /*
  Способы обработки ошибки:
  1) Пробросить ошибку -
  2) При помощи блока do catch -
  3) Конвертация в опциональное значение -
  4) Утверждение безошибочности (небезопастное решение) -
  */

 //ПРОБРОС ОШИБКИ==========================================================================
 //Проброс ошибки - это когда ошибка передаётся коду выше то есть тому коду который вызвал эту ошибку.
 func auth(login: String, pwd: String) throws { //Ключевик throws говорит о том, что функция
     let trueLogin = "Vasya"                    //способна внутри себя сгенерировать ошибку.
     let truePwd = "123"
     guard login == trueLogin else {     //throw, выполняет функцию return и сообщает коду
         throw AuthError.dataNotExist    //выше, то есть тому коду, который вызывает функцию
     }                                   //auth(), что такие данные не существуют.
     guard pwd == truePwd else {
         throw AuthError.wrongPassword
     }
     print("Привет \(login)")
 }


 //DO-CATCH================================================================================
 //Блок do-catch - это как раз тот блок который вызывает функцию, которая генерит ошибку, то есть auth().
 //auth(login: "Fedya", pwd: "4321") Если просто вызвать функцию auth() то мы словим ошибку (Call can throw but is not marked with 'try'), так как вызывать её необходимо в блоке do-catch.
 do {
     try auth(login: "Fedya", pwd: "4321") //Мы говорим, попробуй обработать ошибку!
 } catch AuthError.dataNotExist {
     print("Данные не существуют!") //В нашем случае сработает данный catch.
 } catch AuthError.wrongPassword {
     print("Неверный пароль!")
 }


 //КОНВЕРТАЦИЯ В ОПЦИОНАЛ==================================================================
 try? auth(login: "Fedya", pwd: "4321") //У нас вернулся nil, что говорита нам, что функция не была обработана. Этот метод используется когда нам не надо обрабатывать ошибки.


 //УТВЕРЖДЕНИЕ БЕЗОШИБОЧНОСТИ==============================================================
 try! auth(login: "Fedya", pwd: "4321") //Если у нас была ошибка то мы сваливается в фатфлЕрор и наше приложение падает!


 //СФЕРЫ ПРИМЕНЕНИЯ ОБРАБОТКИ ОШИБОК: Работа с сетью, базой данных, авторизацией, и тд

 */
